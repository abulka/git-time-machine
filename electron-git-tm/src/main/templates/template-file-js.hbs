// Whilst in wxPython we communicate with the parent frame using window.wx_msg.post_message
// in Electron we use window.parent.postMessage
// window.parent.postMessage('This is a message body test');

// MAINTAINING SCROLL POSITION

// Note: The y scroll position is window.scrollY but, because of the use of
// prism and the pre code element, the horizontal scroll position is not in
// window.scrollX but is instead in preElement.scrollLeft

function sendScrollPos() {
    var scrollPos = window.scrollY;
    window.parent.postMessage({ scrollPos: scrollPos })
}

window.addEventListener('scroll', sendScrollPos);  // only works for the verical scroll

// MAINTAINING HORIZONTAL SCROLL POSITION

function sendHorizontalScrollPos(scrollPosX) {
    window.parent.postMessage({ scrollPosX: scrollPosX })
}

document.addEventListener('DOMContentLoaded', function () {
    console.log('DOMContentLoaded')
    var preElement = document.getElementsByTagName('pre')[0];
    preElement.addEventListener('scroll', function () {
      sendHorizontalScrollPos(this.scrollLeft)
    });

    // this code used to be in window.onload() but that was too late and you could see the unscrolled page appear
    // before the scroll happens, causing a jump. Moving the scroll code here makes the jump disapear
    {{#if scroll_to}}
    // Scroll to the position with x=0 and y={{ scroll_to }} before the html is loaded to prevent flickering
    window.scrollTo(0, {{ scroll_to }});
    scrollPreTo({{ scroll_to_x }});
    {{else if line_to}}
    // Scroll to the line before the html is loaded to prevent flickering
    jumpToLine({{ line_to }});
    {{else}}
    // both scroll_to and line_to are not set
    {{/if}}    
});
  
// JUMPING TO LINE

function scrollToPos(scrollPos) {
    // Scroll vertically to the given position
    window.scrollTo(0, scrollPos);
}

function jumpToLine(lineNumber) {
    // Find the pre element
    var preElement = document.querySelector("pre");
  
    // Get the height of each line
    var lineHeight = parseInt(getComputedStyle(preElement).lineHeight);
  
    // Get the line number spans
    var lineNumSpans = preElement.parentElement.querySelectorAll(".line-numbers-rows span");
  
    // Get the total number of lines
    var totalLines = lineNumSpans.length;
  
    // Clamp the line number to the valid range
    var clampedLineNumber = Math.max(1, Math.min(totalLines, lineNumber));
    
    // Get the position of the specified line
    var position = (clampedLineNumber - 1) * lineHeight;
  
    // Scroll to the position
    scrollToPos(position);
  }

// JUMPING TO LINE ON LOAD OR SCROLL TO POSITION ON LOAD

function scrollPreTo(scroll_to_x) {
    // Scroll the pre element horizontally to the given position
    var preElement = document.querySelector("pre");
    preElement.scrollLeft = scroll_to_x;
}
  